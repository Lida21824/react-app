{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5001/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Добавляем токен к запросам\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData),\n  login: credentials => api.post('/auth/login', credentials),\n  updateProfile: userData => api.put('/auth/profile', userData)\n};\nexport const productsAPI = {\n  getAll: () => api.get('/products'),\n  getById: id => api.get(`/products/${id}`)\n};\nexport const ordersAPI = {\n  create: orderData => api.post('/orders', orderData),\n  getMyOrders: () => api.get('/orders/my'),\n  getById: id => api.get(`/orders/${id}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","authAPI","register","userData","post","login","credentials","updateProfile","put","productsAPI","getAll","get","getById","id","ordersAPI","orderData","getMyOrders"],"sources":["/Users/taulan/Documents/react-app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5001/api';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Добавляем токен к запросам\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport const authAPI = {\n  register: (userData) => api.post('/auth/register', userData),\n  login: (credentials) => api.post('/auth/login', credentials),\n  updateProfile: (userData) => api.put('/auth/profile', userData),\n};\n\nexport const productsAPI = {\n  getAll: () => api.get('/products'),\n  getById: (id) => api.get(`/products/${id}`),\n};\n\nexport const ordersAPI = {\n  create: (orderData) => api.post('/orders', orderData),\n  getMyOrders: () => api.get('/orders/my'),\n  getById: (id) => api.get(`/orders/${id}`),\n};\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMK,OAAO,GAAG;EACrBC,QAAQ,EAAGC,QAAQ,IAAKd,GAAG,CAACe,IAAI,CAAC,gBAAgB,EAAED,QAAQ,CAAC;EAC5DE,KAAK,EAAGC,WAAW,IAAKjB,GAAG,CAACe,IAAI,CAAC,aAAa,EAAEE,WAAW,CAAC;EAC5DC,aAAa,EAAGJ,QAAQ,IAAKd,GAAG,CAACmB,GAAG,CAAC,eAAe,EAAEL,QAAQ;AAChE,CAAC;AAED,OAAO,MAAMM,WAAW,GAAG;EACzBC,MAAM,EAAEA,CAAA,KAAMrB,GAAG,CAACsB,GAAG,CAAC,WAAW,CAAC;EAClCC,OAAO,EAAGC,EAAE,IAAKxB,GAAG,CAACsB,GAAG,CAAC,aAAaE,EAAE,EAAE;AAC5C,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG;EACvBxB,MAAM,EAAGyB,SAAS,IAAK1B,GAAG,CAACe,IAAI,CAAC,SAAS,EAAEW,SAAS,CAAC;EACrDC,WAAW,EAAEA,CAAA,KAAM3B,GAAG,CAACsB,GAAG,CAAC,YAAY,CAAC;EACxCC,OAAO,EAAGC,EAAE,IAAKxB,GAAG,CAACsB,GAAG,CAAC,WAAWE,EAAE,EAAE;AAC1C,CAAC;AAED,eAAexB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}